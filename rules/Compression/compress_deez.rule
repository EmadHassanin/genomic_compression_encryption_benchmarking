rule compress_deez:
    params:
        ref = config["ref"],
    input:
        expand("/home/Archive/{bucket}", bucket = config["bucket"]),
        bam = "%s/{sample}.bam" % config["bucket"]
    output: 
        deez = temp("Compression/output/{sample}.{thread}.dz"),
    benchmark:
        "Compression/benchmarks/compress_deez-{sample}.{thread}.txt"
    log:
        "Compression/logs/compress_deez-{sample}.{thread}.log"
    shell:
         """ 
         deez -r {params.ref} -! -t {wildcards.thread} {input.bam} -o {output.deez} > {log}
         """
rule compress_deez_md5sum:
    input:
         expand("/home/Archive/{bucket}", bucket = config["bucket"]),
         bam = "%s/{sample}.bam" % config["bucket"],
         deez = "Compression/output/{sample}.{thread}.dz",
    output: 
         #md5sum = "Compression/checksums/{sample}.{thread}-dz.md5sum",
         size = "Compression/size/{sample}.{thread}.deez.size",
    shell:
         """ 
	 ls -ltrh {input.bam} | awk '{{ print $5  " " $9 }}' > {output.size}
	 ls -ltrh {input.deez} | awk '{{ print $5  " " $9 }}' >> {output.size}
         """
         #md5sum {input.bam} > {output.md5sum}
         #md5sum {input.deez} >> {output.md5sum}
