rule encrypt_gnupg:
    params:
        ref = config["ref"],
    input:
        expand("/home/Archive/{bucket}", bucket = config["bucket"]),
        key = "{sample}.key",
        bam = "%s/{sample}.bam" % config["bucket"]
    output: 
        gnupg = "Compression/output/{sample}.gpg",
    benchmark:
        "Compression/benchmarks/encrypt_gnupg-{sample}.txt"
    log:
        "Compression/logs/encrypt_gnupg-{sample}.log"
    shell:
         """ 
         gpg --yes --batch --passphrase-file={input.key} --output {output.gnupg} -c {input.bam}
         """
rule compress_gnupg_md5sum:
    input:
         expand("/home/Archive/{bucket}", bucket = config["bucket"]),
         bam = "%s/{sample}.bam" % config["bucket"],
         gnupg = "Compression/output/{sample}.gpg",
    output: 
         md5sum = "Compression/checksums/{sample}-gnupg.md5sum",
         size = "Compression/size/{sample}-gnupg.size",
    shell:
         """ 
         md5sum {input.bam} > {output.md5sum}
         md5sum {input.gnupg} >> {output.md5sum}
	 ls -ltrh {input.bam} | awk '{{ print $5  " " $9 }}' > {output.size}
	 ls -ltrh {input.gnupg} | awk '{{ print $5  " " $9 }}' >> {output.size}
         """
